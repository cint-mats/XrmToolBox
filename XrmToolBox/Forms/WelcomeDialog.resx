<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zVSckROJAAAAAElFTkSuQmCC
</value>
  </data>
</root>